<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.domain.TodoMapper">

	<!-- statements for CrudRepository method -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="instance.id">
		INSERT INTO todo 
			(title, details, finished, created_at, created_by, last_updated_at, last_updated_by)
		VALUES 
			(#{instance.title}, #{instance.details}, #{instance.finished}, #{instance.createdAt}, #{instance.createdBy}, #{instance.lastUpdatedAt}, #{instance.lastUpdatedBy})
	</insert>
	<update id="update">
		UPDATE todo SET
			title = #{instance.title}, details = #{instance.details}, finished = #{instance.finished}, last_updated_at = #{instance.lastUpdatedAt}, last_updated_by = #{instance.lastUpdatedBy}
		WHERE
			id = #{instance.id}
	</update>
	<delete id="delete">
		DELETE FROM todo WHERE id = #{id}
	</delete>
	<delete id="delete-activities">
		DELETE FROM activity WHERE todo_id = #{id}
	</delete>
	<delete id="deleteAll">
		DELETE FROM todo
	</delete>
	<delete id="deleteAll-activities">
		DELETE FROM activity WHERE todo_id = #{id}
	</delete>
	<select id="existsById" resultType="_boolean">
		SELECT count(*) FROM todo WHERE id = #{id}
	</select>
	<select id="findById" resultMap="todoMap">
		SELECT
			t.id, t.title, t.details, t.finished, t.created_at, t.created_by, t.last_updated_at, t.last_updated_by
			, a.id as activity_id, a.content as activity_content, a.at as activity_at
		FROM
			todo t
		LEFT OUTER JOIN activity a ON a.todo_id = t.id
		WHERE
			t.id = #{id}
		ORDER BY
			a.sort_order
	</select>
	<resultMap id="todoMap" type="Todo">
		<id column="id" property="id"/>
		<result column="title" property="title"/>
		<result column="details" property="details"/>
		<result column="finished" property="finished"/>
		<result column="created_at" property="createdAt"/>
		<result column="created_by" property="createdBy"/>
		<result column="last_updated_at" property="lastUpdatedAt"/>
		<result column="last_updated_by" property="lastUpdatedBy"/>
		<collection property="activities" columnPrefix="activity_" ofType="Activity">
			<id column="id" property="id"/>
			<result column="content" property="content"/>
			<result column="at" property="at"/>
		</collection>
	</resultMap>
	<select id="findAll" resultType="Todo">
		SELECT
			id, title, details, finished, created_at, created_by, last_updated_at, last_updated_by
		FROM
			todo
		ORDER BY
			id
	</select>
	<select id="findAllById" resultType="Todo">
		SELECT
			id, title, details, finished, created_at, created_by, last_updated_at, last_updated_by
		FROM
			todo
		<where>
			<foreach collection="id" item="idValue" open="id in("
				separator="," close=")">
				#{idValue}
			</foreach>
		</where>
		ORDER BY
			id
	</select>
	<select id="count" resultType="_long">
		SELECT count(*) FROM todo
	</select>

	<!-- statements for custom repository method -->
	<select id="findAllByFinished" resultType="Todo">
		SELECT
			id, title, details, finished, created_at, created_by, last_updated_at, last_updated_by
		FROM
			todo
		WHERE
			finished = #{finished}
		ORDER BY
			id
	</select>
</mapper>